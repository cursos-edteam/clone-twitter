{"version":3,"sources":["hooks/useAuth.js","gql/user.js","components/Home/Avatar.jsx","components/Home/Histories.jsx","components/Home/Navbar.jsx","components/Home/Search.jsx","gql/post.js","components/Home/Posts.jsx","components/Home/Messages.jsx","components/Home/Notifications.jsx","components/Home/index.jsx"],"names":["useContext","AuthContext","NEW_USER","gql","AUTHENTICATION","UPDATE_AVATAR","Avatar","getAvatar","id","open","setOpen","history","useHistory","useMutation","updateAvatar","useState","file","setFile","status","setStatus","onDrop","useCallback","oFile","console","log","reader","FileReader","onload","sFile","result","replace","readAsDataURL","useDropzone","accept","noKeyboard","multiple","getRootProps","getInputProps","sendFile","a","variables","input","error","message","Modal","basic","onClose","onOpen","size","Header","icon","Icon","name","Content","className","Button","secondary","onClick","Storage","reset","push","primary","Actions","color","inverted","disabled","loading","Histories","ready","setReady","useEffect","setTimeout","List","horizontal","Array","keys","map","item","Item","Transition","visible","animation","duration","Image","avatar","src","Navbar","auth","useAuth","setSFile","as","circular","Divider","Search","GET_POSTS","Posts","useQuery","data","Render","getPosts","Comment","Group","idUser","Author","username","Text","post","Action","Messages","Notifications","Home","component","active","setActive","handleClickMenu","e","Menu","attached","tabular","widths"],"mappings":"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","file":"static/js/7.49fcac82.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\n\nexport default () => useContext(AuthContext);","import { gql } from \"@apollo/client\";\n\nexport const NEW_USER = gql`\n    mutation addUser($input: UserInput) {\n        newUser(input: $input) {\n            password\n            username\n        }\n    }\n`;\n\nexport const AUTHENTICATION = gql`\n   mutation logeandome ($input: LoginInput){\n        authentication (input: $input) {\n            token\n        }\n    }\n`;\n\nexport const UPDATE_AVATAR = gql`\n   mutation updateAvatar ($input: AvatarInput) {\n        updateAvatar (input: $input) {\n            id\n        }\n    }\n`;","import { useState, useCallback } from \"react\"; \nimport { Modal, Header, Button, Icon} from \"semantic-ui-react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_AVATAR } from \"../../gql/user\";\nimport Storage from \"../../plugins/Storage\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Avatar = ({ getAvatar, id, open, setOpen }) => {\n    const history = useHistory();\n    const [updateAvatar] = useMutation(UPDATE_AVATAR);\n    const [file, setFile] = useState(null);\n    const [status, setStatus] = useState(false);\n    const onDrop = useCallback((oFile) => {\n        console.log(oFile);\n        const reader = new FileReader();\n        reader.onload = () => {\n            const sFile = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n            setFile(sFile);\n        }\n        reader.readAsDataURL(oFile[0]);\n    }, []);\n\n    const { getRootProps, getInputProps} = useDropzone({\n        accept: \"image/jpeg\",\n        noKeyboard: true,\n        multiple: false,\n        onDrop\n    });\n\n    const logout = () => {\n        Storage.reset();\n        history.push('/login');\n    }\n\n    const sendFile = async () => {\n        try {\n            setStatus(!status);\n            await updateAvatar({\n                variables: {\n                    input: {\n                        id,\n                        file\n                    }\n                }\n            });\n            setStatus(false);\n            setOpen(false);\n            getAvatar(file);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    return (\n        <Modal\n            basic\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            size='mini'\n            >\n            <Header icon>\n                <Icon name='upload' />\n                Subir mi foto de perfil\n            </Header>\n            <Modal.Content className=\"flex flex-row flex-align-center flex-justify-center\">\n                <Button secondary onClick={logout}>\n                    <Icon name=\"logout\"/> Cerrar sesion\n                </Button>\n                <Button {...getRootProps()} primary>Seleccionar mi foto de perfil</Button>\n                <input {...getInputProps()}/>\n            </Modal.Content>\n            <Modal.Actions className=\"flex flex-row flex-align-center flex-justify-center\">\n                <Button basic color='red' inverted onClick={() => setOpen(false)}>\n                    <Icon name='remove' /> Cancelar\n                </Button>\n                <Button disabled={status} loading={status} color='green' inverted onClick={sendFile}>\n                    <Icon name='checkmark' /> Actualizar foto\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n\nexport default Avatar;","import { useEffect, useState } from \"react\";\nimport { List, Image, Transition } from \"semantic-ui-react\";\nconst Histories = () => {\n    const [ready, setReady] = useState(false);\n    useEffect (() => {\n        setTimeout(() => {\n            setReady(!ready);\n        }, 500);\n    }, []);\n    return (\n        <List horizontal className=\"flex flex-row flex-no-wrap overflow-x avatar--height\">\n        {\n          [...Array(10).keys()].map(item => (\n            <List.Item key={item} className=\"item--avatar\">\n              <Transition visible={ready} animation=\"scale\" duration={500}>\n                <Image\n                  avatar\n                  className=\"avatar--image\"\n                  src='https://react.semantic-ui.com/images/avatar/small/tom.jpg'\n                />\n              </Transition>\n            </List.Item>\n          ))\n        }\n      </List>\n    )\n};\n\nexport default Histories;","import { useEffect, useState } from \"react\";\nimport { Header, Image, Divider } from 'semantic-ui-react';\nimport useAuth from \"../../hooks/useAuth\";\nimport Avatar from \"./Avatar\";\nimport Histories from \"./Histories\";\n\nconst Navbar = () => {\n    const { auth } = useAuth();\n    const [open, setOpen] = useState(false);\n    const [sFile, setSFile] = useState(null);\n    useEffect(() => {\n        console.log(auth);\n    }, [])\n\n    // https://randomuser.me/api/portraits/thumb/women/99.jpg\n    const getAvatar = (sFile) => setSFile(sFile);\n    return(\n        <>\n            <Header as='h3' className=\"d-flex flex-column flex-align-start flex-justify-center mt-5 mb-5\">\n                <Image\n                    onClick={() => setOpen(!open)}\n                    circular\n                    src={\n                        sFile ? `data:image/jpeg; base64,${sFile}` :\n                        auth.avatar ? `data:image/jpeg; base64,${auth.avatar}` : \n                        'https://randomuser.me/api/portraits/thumb/men/99.jpg'}\n                    />\n                    { auth.name }\n            </Header>\n            <Avatar getAvatar={getAvatar} id={auth.id} open={open} setOpen={setOpen}/>\n            <Divider className=\"mt-5 mb-5\"/>\n            <Histories/>\n        </>\n    )\n};\n\nexport default Navbar;","const Search = () => <h1>Hola search</h1>;\nexport default Search;","import { gql } from \"@apollo/client\";\n\nexport const GET_POSTS = gql`\n   query obtenerPublicaciones {\n        getPosts {\n            idUser {\n                name\n                username\n                id\n                avatar\n                email\n            }\n            id\n            post\n        }\n    }\n`;","import { useEffect } from \"react\";\nimport { Comment } from \"semantic-ui-react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_POSTS } from \"../../gql/post\";\n\nconst Posts = ({ auth }) => {\n    const { data, loading } = useQuery(GET_POSTS);\n    useEffect(() => {\n        console.log(data);\n        console.log(auth);\n    }, [loading]);\n\n    const Render = ({ data }) => {\n        if (!data) return null;\n        return (\n            data.getPosts.map(item => (\n                <Comment.Group key={item.id}>\n                    <Comment>\n                    <Comment.Avatar as='a' src={`data:image/jpeg; base64,${item.idUser.avatar}`} />\n                    <Comment.Content>\n                        <Comment.Author>{ item.idUser.username }</Comment.Author>\n                        <Comment.Text>{ item.post }</Comment.Text>\n                        <Comment.Actions>\n                        <Comment.Action>Agregar</Comment.Action>\n                        { auth.id === item.idUser.id && <Comment.Action>Editar</Comment.Action>}\n                        { auth.id === item.idUser.id && <Comment.Action>Eliminar</Comment.Action>}\n                        </Comment.Actions>\n                    </Comment.Content>\n                    </Comment>\n                </Comment.Group>\n            ))   \n        )\n    }\n\n    return(\n        <Render data={data}/>\n    )\n};\nexport default Posts;","const Messages = () => <h1>Hola Messages</h1>;\nexport default Messages;","const Notifications = () => <h1>Hola Notifications</h1>;\nexport default Notifications;","import { useState } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport Search from \"./Search\";\nimport Posts from \"./Posts\";\nimport Messages from \"./Messages\";\nimport Notifications from \"./Notifications\";\n\nimport useAuth from \"../../hooks/useAuth\";\n\nconst Home = () => {\n    const { auth } = useAuth();\n    const [active, setActive] = useState({\n        name: 'home',\n        component: null\n    });\n\n    const Render = () => active.component ? active.component : <Posts auth={auth}/>;\n    \n    const handleClickMenu = (e, { name, component } ) => {\n        setActive({\n            name,\n            component\n        });\n    }\n\n    return (\n        <>\n        <Navbar/>\n        <Render/>\n        <div className=\"items--container\">\n            <Menu attached='bottom' tabular widths='4'>\n                <Menu.Item\n                    component={<Posts auth={auth}/>}\n                    name='home'\n                    active={active.name === 'home'}\n                    onClick={handleClickMenu}\n                >\n                    <Icon name='home'/>\n                </Menu.Item>\n\n                <Menu.Item\n                    component={<Search/>}\n                    name='search'\n                    active={active.name === 'search'}\n                    onClick={handleClickMenu}\n                >\n                    <Icon name='search'/>\n                </Menu.Item>\n\n                <Menu.Item\n                    component={<Notifications/>}\n                    name='notifications'\n                    active={active.name === 'notifications'}\n                    onClick={handleClickMenu}\n                >\n                    <Icon name='bell'/>\n                </Menu.Item>\n\n                <Menu.Item\n                    component={<Messages/>}\n                    name='messages'\n                    active={active.name === 'messages'}\n                    onClick={handleClickMenu}\n                >\n                    <Icon name='mail'/>\n                </Menu.Item>\n            </Menu>\n        </div>\n        </>\n    )\n};\n\nexport default Home;"],"sourceRoot":""}